# 定义运行Nginx的用户
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # 包含MIME类型定义
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # 启用高效文件传输
    sendfile on;
    # 减少数据包数量
    tcp_nopush on;

    # 保持连接超时时间
    keepalive_timeout 65;

    # 启用Gzip压缩
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # 定义上游Flask服务器
    upstream flask_app {
        server 192.168.1.8:5000;
    }

    # 主服务器配置
    server {
        listen 80;
        server_name localhost;

        # 静态文件服务配置
        location /static/ {
            # 静态文件目录
            alias /app/static/;
            # 设置缓存头
            expires 1h;
            add_header Cache-Control "public";
            # 允许所有跨域请求（根据需要调整）
            add_header Access-Control-Allow-Origin *;
            # 允许所有HTTP方法
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
        }

        # API请求代理到Flask
        location /api/ {
            # 代理到Flask应用
            proxy_pass http://flask_app;
            # 设置代理头
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # 允许所有跨域请求
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
        }
    }
}
